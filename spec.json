{
  "openapi": "3.0.1",
  "info": {
    "title": "Cart API",
    "version": "V1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Cart",
      "description": "API responsible for cart management"
    }
  ],
  "paths": {
    "/cart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Creates new instance of cart",
        "description": "Creates new instance of a cart and provides DTO representing new cart",
        "operationId": "createNewCart",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/{cartId}/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Pay for the order with provided cart id. If payment is not sufficient for provided order, this operation will end with an exception",
        "description": "Pay for the order that is contained inside the cart with provided id",
        "operationId": "checkout",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "Id of the cart",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/{cartId}/book": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Book line item for the cart with provided id, if available line item for this product can be found",
        "description": "Book line item for the cart with provided id",
        "operationId": "bookItem",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "Id of the cart",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductLineItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Get all products provided by the service",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/events/stream": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "This stream contains events produced by the system. Example of an event: 'item has been booked'",
        "description": "Subscribe to event stream produced by the system",
        "operationId": "streamEvents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SseEmitter"
                }
              }
            }
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/{cartId}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get entity that represents the cart with provided cart id",
        "description": "Get entity with provided cart ID",
        "operationId": "getCart",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Deletes the cart with provided cart id",
        "description": "Delete the cart with provided id",
        "operationId": "deleteCart",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "The cart with provided id was not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Order is in illegal state and cannot be accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "417": {
            "description": "No available item was found for provided product",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "description": "Generic entity received as an response from the API"
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductLineItem"
            }
          },
          "total": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "paidTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Entity representing the cart"
      },
      "ProductLineItem": {
        "required": [
          "productId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "itemStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "BOOKED",
              "SOLD"
            ]
          }
        },
        "description": "Entity representing product line item"
      },
      "Payment": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          }
        },
        "description": "Information that represents the payment information"
      },
      "Product": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Entity representing the product"
      },
      "SseEmitter": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}
